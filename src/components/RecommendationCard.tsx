import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { cn } from "@/lib/utils";
import type { RecommendationCardProps } from "@/lib/types/recommendations";
import { RecommendationStatus } from "@/types";

export function RecommendationCard({ recommendation, isCompact = false }: RecommendationCardProps) {
  const { book, plot_summary, rationale, ai_model, created_at, status } = recommendation;
  const formattedDate = new Date(created_at).toLocaleDateString();

  const statusColors = {
    [RecommendationStatus.ACCEPTED]: "bg-green-50 text-green-700 border-green-200 hover:bg-green-100",
    [RecommendationStatus.REJECTED]: "bg-red-50 text-red-700 border-red-200 hover:bg-red-100",
    [RecommendationStatus.PENDING]: "bg-gray-50 text-gray-700 border-gray-200 hover:bg-gray-100",
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <div className="flex items-start justify-between">
          <div>
            <CardTitle className="text-xl">{book.title}</CardTitle>
            <CardDescription className="mt-1">
              by {book.authors.map((author) => author.name).join(", ")}
            </CardDescription>
          </div>
          <div className="flex gap-2">
            <Badge variant="outline">{book.language}</Badge>
            {status !== RecommendationStatus.PENDING && (
              <Badge variant="outline" className={cn("capitalize", statusColors[status])}>
                {status.toLowerCase()}
              </Badge>
            )}
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        {!isCompact && (
          <>
            <div>
              <h3 className="font-semibold mb-2">Plot Summary</h3>
              <p className="text-gray-600">{plot_summary}</p>
            </div>
            <div>
              <h3 className="font-semibold mb-2">Why This Book?</h3>
              <p className="text-gray-600">{rationale}</p>
            </div>
          </>
        )}
        <div className="flex items-center justify-between text-sm text-gray-500">
          <span>Generated by {ai_model}</span>
          <time dateTime={created_at}>{formattedDate}</time>
        </div>
      </CardContent>
    </Card>
  );
}

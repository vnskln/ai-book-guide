name: Pull Request Checks

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint

  test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests with coverage
        id: coverage
        run: |
          npm run test:coverage
          echo "COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')" >> $GITHUB_OUTPUT

  status-comment:
    name: PR Status Comment
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const testStatus = '${{ needs.test.result }}';
            const coverage = '${{ needs.test.outputs.COVERAGE }}';
            
            const statusEmoji = {
              success: '✅',
              failure: '❌',
              cancelled: '⚪',
              skipped: '⏭️'
            };
            
            const comment = [
              '### Pull Request Check Results',
              '',
              `${statusEmoji[lintStatus] || '❓'} **Lint:** ${lintStatus}`,
              `${statusEmoji[testStatus] || '❓'} **Tests:** ${testStatus}`,
              coverage ? `\n📊 **Coverage:** ${coverage}%` : '',
              '',
              '_This comment was automatically generated by GitHub Actions_'
            ].join('\n');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: comment
            }); 